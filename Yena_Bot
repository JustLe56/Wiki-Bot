
import discord
import wikipedia
from discord.ext import commands

client = commands.Bot(command_prefix = '!')

@client.event
async def on_ready():
    await client.change_presence(status=discord.Status.online,activity=discord.Game('!self for commands'))
    print("Bot is online.")

@client.command()
async def self(ctx): #command !help gives list of all commands
        commands={}
        commands['!self']='You just entered this command...'
        commands['!ping']='Test the my response time'
        commands['!wikiSum']='Gives Wikipedia summary of entered text'
        commands['!wikiPic']='Gives Wikipedia picture of entered text'
        commands['!clear']= 'Deletes a given number of messages (Default is 5)'

        msg=discord.Embed(title='Yena Bot Commands', description="Written by Day56#6042",color=0xf4bf42)

        for command,description in commands.items():
            msg.add_field(name=command,value=description, inline=False)
            
        await ctx.send(embed=msg)

@client.command()
async def ping(ctx): #command !ping tests bot's response time
    await ctx.send(f'Response time in: {round(client.latency * 1000)} ms')

@client.command()
async def wikiSum(ctx,userInput): #command !wikiSum gives wikipedia text summary
    try: 
            await ctx.send(format(wikipedia.summary(userInput,sentences=4)))
    except wikipedia.exceptions.DisambiguationError as e: #Disambiguation error message
            await ctx.send(format(("Error: {0}".format(e))))
            await ctx.send("Error: too many results, please try again with more details.")

@client.command() 
async def wikiPic(ctx,userInput): #command !wikiPic gives wikipedia picture
    try:
          picFind = wikipedia.page(userInput)
          await ctx.send("Picture from: <{}>".format(picFind.url))
          await ctx.send(picFind.images[6])

    except wikipedia.exceptions.DisambiguationError as e:
            await ctx.send(format(("Error: {0}".format(e))))
            await ctx.send("Please try again with more details.")

@client.command()
async def clear(ctx,amount=5):
    await ctx.channel.purge(limit=amount)

client.run('NTY4NjAzMjc2NTUyMDQ0NTU0.XLkgGQ.BgWi6DSV8NOVzrvp5Xmn3LVv1ww')
